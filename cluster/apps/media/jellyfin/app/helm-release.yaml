apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: jellyfin
  namespace: media
spec:
  interval: 30m
  chart:
    spec:
      chart: app-template
      version: 4.4.0
      sourceRef:
        kind: HelmRepository
        name: bjw-s
        namespace: flux-system
  install:
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      strategy: rollback
      retries: 3
  values:
    controllers:
      jellyfin:
        pod:
          securityContext:
            runAsNonRoot: true
            runAsUser: 568
            runAsGroup: 568
            fsGroup: 568
            fsGroupChangePolicy: OnRootMismatch
            seccompProfile: { type: RuntimeDefault }
            supplementalGroups: [44, 109, 992, 10000]
          nodeSelector:
            intel.feature.node.kubernetes.io/gpu: "true"
        containers:
          app:
            image:
              repository: ghcr.io/jellyfin/jellyfin
              tag: 10.11.0@sha256:519b02989eafcc4bdb558bdc7014c2395c19608e5c2d7ed99a5f3edd0c75f7ef
            env:
              TZ: America/Denver
            securityContext:
              allowPrivilegeEscalation: false
              readOnlyRootFilesystem: true
              capabilities: { drop: ["ALL"] }
            probes:
              liveness: &probes
                enabled: false
                custom: true
                spec:
                  httpGet:
                    path: /health
                    port: &port 8096
                  initialDelaySeconds: 0
                  periodSeconds: 10
                  timeoutSeconds: 1
                  failureThreshold: 3
              readiness: *probes
            resources:
              requests:
                gpu.intel.com/i915: 1
                cpu: 200m
                memory: 1Gi
              limits:
                gpu.intel.com/i915: 1
                memory: 8Gi
    service:
      app:
        controller: jellyfin
        ports:
          http:
            port: *port
        type: ClusterIP
    ingress:
      app:
        className: traefik
        hosts:
          - host: jellyfin.${DOMAIN}
            paths:
              - path: /
                service:
                  identifier: app
                  port: http
        tls:
          - hosts:
            - jellyfin.${DOMAIN}
            secretName: jellyfin-certificate-secret
    persistence:
      config:
        existingClaim: jellyfin-config-volume
      tmpfs:
        enabled: true
        type: emptyDir
        globalMounts:
          - path: /tmp
      transcode:
        enabled: true
        type: emptyDir
        globalMounts:
          - path: /transcode
      cache:
        enabled: true
        type: emptyDir
        globalMounts:
          - path: /cache
      movies:
        type: nfs
        server: ${FS1_IP}
        path: ${MOVIES_PATH}
        globalMounts:
          - path: /movies
      tv-shows:
        type: nfs
        server: ${FS1_IP}
        path: ${TVSHOWS_PATH}
        globalMounts:
          - path: /tv-shows
